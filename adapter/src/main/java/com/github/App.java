package com.github;

/**
 * 适配器模式
 * 目的：将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容 而不能一起工作的那些类可以一起工作。
 * 
 * 适用性 以下情况使用Adapter模式 
 * •  你想使用一个已经存在的类，而它的接口不符合你的需求。
 * •  你想创建一个可以复用的类，该类可以与其他不相关的类或不可预见的类（即那些接口 可能不一定兼容的类）协同工作。
 * •  （仅适用于对象Adapter）你想使用一些已经存在的子类，但是不可能对每一个都进行 子类化以匹配它们的接口。对象适配器可以适配它的父类接口。
 *
 *  * 适配器模式和桥接模式不同点：
 *  1）适配器：改变已有的两个接口，让他们相容。
 *  2）桥接模式：分离抽象化和实现，使两者的接口可以不同，目的是分离。
 *   桥接是先有桥，才有两端的东西
 *   适配是先有两边的东西，才有适配器
 */
public class App {

    public static void main(String[] args) {
        Target target = new Adapter();
        target.doSomething();
    }
}
